package app;

import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseListener;
import javax.swing.UnsupportedLookAndFeelException;

public class Launcher extends javax.swing.JFrame implements ActionListener, MouseListener {

    public static String SECONDS = "60";
    //No Idle Thread
    NoIdle adThreadNoIdle = new NoIdle();
    Thread threadNoIdle;

    //ADTimer Thread
    NoIdle adThreadADTimer = new NoIdle();
    Thread threadADTimer;

    //ADNotification Thread
    NoIdle adThreadADNotification;
    Thread threadADNotification;

    /**
     * Creates new form Launcher
     */
    public Launcher() {
        initComponents();
        //Enable Login button by enter at Root Pane
        getRootPane().setDefaultButton(jButtonStart);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTimer = new javax.swing.JLabel();
        jTextFieldSeconds = new javax.swing.JTextField();
        jButtonStart = new javax.swing.JButton();
        jCheckBoxNotification = new javax.swing.JCheckBox();
        jLabelRemind = new javax.swing.JLabel();
        jPanelStatusBar = new javax.swing.JPanel();
        jLabelStatus = new javax.swing.JLabel();
        jLabelHelp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("No Idle 1.0");
        setAlwaysOnTop(true);
        setResizable(false);

        jLabelTimer.setText("Timer in Seconds");

        jTextFieldSeconds.setToolTipText("Default is 60 seconds");

        jButtonStart.setText("Start");
        jButtonStart.setToolTipText("Press (Enter) to start/stop");
        jButtonStart.addActionListener(this);

        jCheckBoxNotification.setToolTipText("Show Windows notification every 30 mintues?");

        jLabelRemind.setText("Remind?");
        jLabelRemind.setToolTipText("Remind me every 30 minutes");

        jPanelStatusBar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelStatus.setForeground(new java.awt.Color(102, 102, 102));
        jLabelStatus.setText("Status: Ready");

        javax.swing.GroupLayout jPanelStatusBarLayout = new javax.swing.GroupLayout(jPanelStatusBar);
        jPanelStatusBar.setLayout(jPanelStatusBarLayout);
        jPanelStatusBarLayout.setHorizontalGroup(
            jPanelStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusBarLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabelStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelStatusBarLayout.setVerticalGroup(
            jPanelStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStatusBarLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabelStatus))
        );

        jLabelHelp.setForeground(java.awt.Color.blue);
        jLabelHelp.setText("Help");
        jLabelHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHelp.addMouseListener(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelStatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelHelp)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelTimer)
                    .addComponent(jLabelRemind))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonStart)
                    .addComponent(jCheckBoxNotification)
                    .addComponent(jTextFieldSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabelHelp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTimer)
                    .addComponent(jTextFieldSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCheckBoxNotification)
                    .addComponent(jLabelRemind))
                .addGap(18, 18, 18)
                .addComponent(jButtonStart)
                .addGap(25, 25, 25)
                .addComponent(jPanelStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTextFieldSeconds.getAccessibleContext().setAccessibleDescription("");

        getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButtonStart) {
            Launcher.this.jButtonStartActionPerformed(evt);
        }
    }

    public void mouseClicked(java.awt.event.MouseEvent evt) {
        if (evt.getSource() == jLabelHelp) {
            Launcher.this.jLabelHelpMouseClicked(evt);
        }
    }

    public void mouseEntered(java.awt.event.MouseEvent evt) {
    }

    public void mouseExited(java.awt.event.MouseEvent evt) {
    }

    public void mousePressed(java.awt.event.MouseEvent evt) {
    }

    public void mouseReleased(java.awt.event.MouseEvent evt) {
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        if (jButtonStart.getText() == "Start") {
            //Disable buttons
            jButtonStart.setText("Stop");
            jTextFieldSeconds.setEnabled(false);
            jCheckBoxNotification.setEnabled(false);

            //Setting Repeat Seconds and Key for NoIdle Thread
            String fieldSeconds = jTextFieldSeconds.getText();
            if (fieldSeconds.isEmpty() || Integer.valueOf(fieldSeconds) < 60) {
                jTextFieldSeconds.setText(Launcher.SECONDS);
            }
            adThreadNoIdle.KEYEVENT_INT = KeyEvent.VK_F15;

            //Start new NoIdle Thread
            adThreadNoIdle.adMethod = "noIdle";
            threadNoIdle = new Thread(adThreadNoIdle);
            threadNoIdle.start();

            //Start ADTimer Thread
            adThreadADTimer.adMethod = "adTimer";
            threadADTimer = new Thread(adThreadADTimer);
            threadADTimer.start();
            NoIdle.startTime = System.currentTimeMillis();

            //if selected Start ADTimer Thread
            if (jCheckBoxNotification.isSelected()) {
                adThreadADNotification = new NoIdle();
                adThreadADNotification.adMethod = "adNotification";
                threadADNotification = new Thread(adThreadADNotification);
                threadADNotification.start();
            }
        } else {
            threadNoIdle.interrupt();
            threadADTimer.interrupt();

            jButtonStart.setText("Start");
            jTextFieldSeconds.setEnabled(true);
            jCheckBoxNotification.setEnabled(true);

            jLabelStatus.setText("Status: Ready");

            if (threadADNotification != null) {
                threadADNotification.interrupt();
            }
        }
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jLabelHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHelpMouseClicked
        System.out.println("Mouse clicked");
        AppHelp h = new AppHelp();
        h.setVisible(true);
    }//GEN-LAST:event_jLabelHelpMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Launcher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStart;
    private javax.swing.JCheckBox jCheckBoxNotification;
    private javax.swing.JLabel jLabelHelp;
    private javax.swing.JLabel jLabelRemind;
    static javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelTimer;
    private javax.swing.JPanel jPanelStatusBar;
    private javax.swing.JTextField jTextFieldSeconds;
    // End of variables declaration//GEN-END:variables
}
